{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from 'moment';\nexport default {\n  name: 'News',\n  props: ['apiKey'],\n  data: function data() {\n    return {\n      url: '',\n      currentPage: 1,\n      totalResults: 0,\n      newsPerPage: 10,\n      articles: [],\n      search: ''\n    };\n  },\n  filters: {\n    formatDate: function formatDate(value) {\n      if (value) {\n        return moment(String(value)).format('MM/DD/YYYY hh:mm');\n      }\n    }\n  },\n  methods: {\n    fetchData: function fetchData() {\n      var _this = this;\n\n      if (this.search !== '') {\n        this.url = 'https://newsapi.org/v2/everything?q=' + this.search + '&pageSize=' + this.newsPerPage + '&apiKey=' + this.apiKey;\n      } else {\n        this.url = 'https://newsapi.org/v2/top-headlines?country=gb&pageSize=' + this.newsPerPage + '&apiKey=' + this.apiKey;\n        this.search = '';\n      }\n\n      this.articles = [];\n      var request = new Request(this.url + '&page=' + this.currentPage);\n      fetch(request).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this.totalResults = data.totalResults;\n        data.articles.forEach(function (element) {\n          _this.articles.push(element);\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    selectData: function selectData(category) {\n      var _this2 = this;\n\n      this.url = 'https://newsapi.org/v2/top-headlines?category=' + category + '&apiKey=' + this.apiKey;\n      this.articles = [];\n      var request = new Request(this.url + '&page=' + this.currentPage);\n      fetch(request).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this2.totalResults = data.totalResults;\n        data.articles.forEach(function (element) {\n          _this2.articles.push(element);\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    updateNewsPerPage: function updateNewsPerPage(value) {\n      this.newsPerPage = value;\n      this.currentPage = 1;\n      this.fetchData();\n    },\n    updatePage: function updatePage(page) {\n      this.currentPage = page;\n      this.fetchData();\n    },\n    openLink: function openLink(url) {\n      window.open(url);\n    }\n  },\n  created: function created() {\n    this.fetchData();\n  },\n  selectCategorie: function selectCategorie() {\n    this.categorie = 'https://newsapi.org/v2/top-headlines/sources?category=businessapiKey=API_KEY';\n    this.fetchData();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AAEA;EACAA,YADA;EAEAC,iBAFA;EAGAC;IACA;MACAC,OADA;MAEAC,cAFA;MAGAC,eAHA;MAIAC,eAJA;MAKAC,YALA;MAMAC;IANA;EASA,CAbA;EAcAC;IACAC;MACA;QACA;MACA;IACA;EALA,CAdA;EAqBAC;IACAC,SADA,uBACA;MAAA;;MACA;QACA,WACA,yCACA,WADA,GAEA,YAFA,GAGA,gBAHA,GAIA,UAJA,GAKA,WANA;MAOA,CARA,MAQA;QACA,WACA,8DACA,gBADA,GAEA,UAFA,GAGA,WAJA;QAMA;MACA;;MAEA;MAEA;MACAC,eACAC,IADA,CACA;QAAA;MAAA,CADA,EAEAA,IAFA,CAEA;QACA;QACAZ;UACA;QACA,CAFA;MAGA,CAPA,EAQAa,KARA,CAQA;QACAC;MACA,CAVA;IAWA,CAlCA;IAoCAC,UApCA,sBAoCAC,QApCA,EAoCA;MAAA;;MAEA,WACA,mDACAA,QADA,GAEA,UAFA,GAGA,WAJA;MAQA;MAEA;MACAL,eACAC,IADA,CACA;QAAA;MAAA,CADA,EAEAA,IAFA,CAEA;QACA;QACAZ;UACA;QACA,CAFA;MAGA,CAPA,EAQAa,KARA,CAQA;QACAC;MACA,CAVA;IAWA,CA5DA;IA8DAG,iBA9DA,6BA8DAC,KA9DA,EA8DA;MACA;MACA;MACA;IACA,CAlEA;IAoEAC,UApEA,sBAoEAC,IApEA,EAoEA;MACA;MACA;IACA,CAvEA;IAyEAC,QAzEA,oBAyEApB,GAzEA,EAyEA;MACAqB;IACA;EA3EA,CArBA;EAkGAC,OAlGA,qBAkGA;IACA;EACA,CApGA;EAsGAC,eAtGA,6BAsGA;IACA;IACA;EACA;AAzGA","names":["name","props","data","url","currentPage","totalResults","newsPerPage","articles","search","filters","formatDate","methods","fetchData","fetch","then","catch","console","selectData","category","updateNewsPerPage","value","updatePage","page","openLink","window","created","selectCategorie"],"sourceRoot":"src/components","sources":["News.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"px-4 py-4 my-4 text-center\">\n      <svg width=\"207\" height=\"82\" viewBox=\"0 0 207 82\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M27.04 14.68C26.9333 16.2533 26.8533 17.7733 26.8 19.24C26.7733 20.7067 26.76 21.8267 26.76 22.6C26.76 23.16 26.7733 23.6933 26.8 24.2C26.8267 24.7067 26.8533 25.1333 26.88 25.48H25.96C25.3467 22.9733 24.6 21 23.72 19.56C22.8667 18.12 21.9467 17.1067 20.96 16.52C20 15.9067 19.04 15.6 18.08 15.6H18.04V38.48C18.04 39.5733 18.1467 40.3867 18.36 40.92C18.6 41.4533 19.04 41.8 19.68 41.96C20.32 42.12 21.2533 42.2 22.48 42.2V43C21.5467 42.9733 20.28 42.9467 18.68 42.92C17.1067 42.8933 15.4533 42.88 13.72 42.88C12.0667 42.88 10.5067 42.8933 9.04 42.92C7.57333 42.9467 6.38667 42.9733 5.48 43V42.2C6.70667 42.2 7.64 42.12 8.28 41.96C8.92 41.8 9.34667 41.4533 9.56 40.92C9.8 40.3867 9.92 39.5733 9.92 38.48V15.6H9.88C8.92 15.6 7.94667 15.9067 6.96 16.52C6 17.1067 5.09333 18.12 4.24 19.56C3.38667 20.9733 2.64 22.9467 2 25.48H1.08C1.13333 25.1333 1.16 24.7067 1.16 24.2C1.18667 23.6933 1.2 23.16 1.2 22.6C1.2 21.8267 1.17333 20.7067 1.12 19.24C1.09333 17.7733 1.02667 16.2533 0.92 14.68C2.2 14.7067 3.61333 14.7333 5.16 14.76C6.70667 14.7867 8.25333 14.8 9.8 14.8C11.3467 14.8 12.7467 14.8 14 14.8C15.2533 14.8 16.6533 14.8 18.2 14.8C19.7467 14.8 21.2933 14.7867 22.84 14.76C24.3867 14.7333 25.7867 14.7067 27.04 14.68ZM44.6887 14.68C45.4621 14.7067 46.4754 14.7333 47.7287 14.76C49.0087 14.7867 50.2887 14.8 51.5687 14.8C52.9021 14.8 54.1821 14.7867 55.4087 14.76C56.6354 14.7333 57.5021 14.72 58.0087 14.72C60.7287 14.72 62.9687 14.9733 64.7288 15.48C66.5154 15.9867 67.8487 16.76 68.7287 17.8C69.6088 18.8133 70.0488 20.1067 70.0488 21.68C70.0488 22.6667 69.8488 23.6267 69.4487 24.56C69.0487 25.4933 68.3687 26.3467 67.4087 27.12C66.4487 27.8667 65.1287 28.4667 63.4487 28.92C61.7954 29.3467 59.6887 29.56 57.1287 29.56H53.2887V28.76H56.7287C58.0887 28.76 59.1154 28.4667 59.8087 27.88C60.5287 27.2667 61.0087 26.4667 61.2487 25.48C61.5154 24.4667 61.6487 23.3467 61.6487 22.12C61.6487 20.0133 61.3554 18.3867 60.7687 17.24C60.2087 16.0667 59.2221 15.48 57.8087 15.48C56.9021 15.48 56.3154 15.7067 56.0487 16.16C55.7821 16.6133 55.6487 17.5333 55.6487 18.92V38.76C55.6487 39.72 55.7154 40.44 55.8487 40.92C56.0087 41.4 56.2887 41.72 56.6887 41.88C57.0887 42.04 57.6887 42.1467 58.4887 42.2V43C57.7154 42.9467 56.7154 42.92 55.4887 42.92C54.2887 42.8933 53.0621 42.88 51.8087 42.88C50.3687 42.88 49.0087 42.8933 47.7287 42.92C46.4754 42.92 45.4621 42.9467 44.6887 43V42.2C45.5154 42.1467 46.1287 42.04 46.5287 41.88C46.9287 41.72 47.1954 41.4 47.3287 40.92C47.4621 40.44 47.5287 39.72 47.5287 38.76V18.92C47.5287 17.9333 47.4621 17.2133 47.3287 16.76C47.1954 16.28 46.9154 15.96 46.4887 15.8C46.0887 15.6133 45.4887 15.5067 44.6887 15.48V14.68ZM53.0487 28.88C54.0087 28.9067 54.9154 28.96 55.7687 29.04C56.6221 29.12 57.4087 29.2 58.1287 29.28C58.8487 29.3333 59.4621 29.3733 59.9687 29.4C62.8221 29.5333 64.9554 30.0267 66.3688 30.88C67.8087 31.7333 68.6887 32.9867 69.0087 34.64L69.8487 38.8C70.0621 39.7867 70.3021 40.4667 70.5687 40.84C70.8354 41.2133 71.1954 41.4 71.6487 41.4C71.9154 41.4 72.1421 41.36 72.3288 41.28C72.5154 41.2 72.7021 41.0667 72.8888 40.88L73.4088 41.4C72.5821 42.2267 71.6754 42.7867 70.6887 43.08C69.7287 43.4 68.6354 43.56 67.4087 43.56C65.6754 43.56 64.2754 43.2533 63.2087 42.64C62.1421 42 61.4887 40.8667 61.2487 39.24L60.6487 35.24C60.4887 34.1467 60.2887 33.1733 60.0487 32.32C59.8087 31.4667 59.4887 30.8 59.0887 30.32C58.6887 29.8133 58.1421 29.56 57.4487 29.56H53.1287L53.0487 28.88ZM111.477 14.68C111.37 16.0133 111.29 17.3067 111.237 18.56C111.21 19.7867 111.197 20.7333 111.197 21.4C111.197 21.96 111.21 22.4933 111.237 23C111.264 23.5067 111.29 23.9333 111.317 24.28H110.397C110.077 22.0667 109.544 20.3333 108.797 19.08C108.05 17.8 107.17 16.9067 106.157 16.4C105.17 15.8667 104.13 15.6 103.037 15.6H102.517C101.824 15.6 101.304 15.6667 100.957 15.8C100.61 15.9067 100.37 16.1333 100.237 16.48C100.13 16.8267 100.077 17.3733 100.077 18.12V39.56C100.077 40.28 100.13 40.8267 100.237 41.2C100.37 41.5467 100.61 41.7867 100.957 41.92C101.304 42.0267 101.824 42.08 102.517 42.08H103.837C104.717 42.08 105.637 41.8 106.597 41.24C107.584 40.6533 108.49 39.6667 109.317 38.28C110.144 36.8933 110.77 35 111.197 32.6H112.117C112.037 33.56 111.997 34.7867 111.997 36.28C111.997 36.9467 112.01 37.9067 112.037 39.16C112.064 40.3867 112.144 41.6667 112.277 43C110.917 42.9467 109.384 42.92 107.677 42.92C105.97 42.8933 104.45 42.88 103.117 42.88C102.397 42.88 101.477 42.88 100.357 42.88C99.2635 42.88 98.0635 42.8933 96.7569 42.92C95.4769 42.92 94.1702 42.9333 92.8369 42.96C91.5302 42.96 90.2902 42.9733 89.1169 43V42.2C89.9435 42.1467 90.5569 42.04 90.9569 41.88C91.3569 41.72 91.6235 41.4 91.7569 40.92C91.8902 40.44 91.9569 39.72 91.9569 38.76V18.92C91.9569 17.9333 91.8902 17.2133 91.7569 16.76C91.6235 16.28 91.3435 15.96 90.9169 15.8C90.5169 15.6133 89.9169 15.5067 89.1169 15.48V14.68C90.2902 14.7067 91.5302 14.7333 92.8369 14.76C94.1702 14.76 95.4769 14.7733 96.7569 14.8C98.0635 14.8 99.2635 14.8 100.357 14.8C101.477 14.8 102.397 14.8 103.117 14.8C104.344 14.8 105.73 14.8 107.277 14.8C108.85 14.7733 110.25 14.7333 111.477 14.68ZM105.677 28.36C105.677 28.36 105.677 28.4933 105.677 28.76C105.677 29.0267 105.677 29.16 105.677 29.16H98.8769C98.8769 29.16 98.8769 29.0267 98.8769 28.76C98.8769 28.4933 98.8769 28.36 98.8769 28.36H105.677ZM106.837 23.08C106.73 24.6 106.677 25.76 106.677 26.56C106.704 27.36 106.717 28.0933 106.717 28.76C106.717 29.4267 106.73 30.16 106.757 30.96C106.784 31.76 106.85 32.92 106.957 34.44H106.037C105.877 33.4533 105.544 32.56 105.037 31.76C104.557 30.96 103.93 30.3333 103.157 29.88C102.384 29.4 101.49 29.16 100.477 29.16V28.36C101.224 28.36 101.904 28.2 102.517 27.88C103.13 27.56 103.664 27.1333 104.117 26.6C104.597 26.0667 104.984 25.4933 105.277 24.88C105.597 24.2667 105.81 23.6667 105.917 23.08H106.837ZM157.933 14.68V15.48C157.133 15.64 156.519 15.92 156.093 16.32C155.693 16.72 155.426 17.3467 155.293 18.2C155.159 19.0267 155.093 20.2 155.093 21.72V43C154.693 42.9467 154.253 42.92 153.773 42.92C153.319 42.92 152.826 42.9467 152.293 43L134.573 23.64V35.16C134.573 36.9467 134.639 38.32 134.773 39.28C134.933 40.2133 135.293 40.8933 135.853 41.32C136.439 41.72 137.359 42.0133 138.613 42.2V43C138.079 42.9467 137.386 42.92 136.533 42.92C135.679 42.8933 134.879 42.88 134.133 42.88C133.546 42.88 132.946 42.8933 132.333 42.92C131.719 42.92 131.213 42.9467 130.813 43V42.2C131.639 42.0133 132.253 41.7333 132.653 41.36C133.053 40.96 133.319 40.3333 133.453 39.48C133.586 38.6267 133.653 37.4533 133.653 35.96V18.92C133.653 17.9333 133.586 17.2133 133.453 16.76C133.319 16.28 133.039 15.96 132.613 15.8C132.213 15.6133 131.613 15.5067 130.813 15.48V14.68C131.213 14.7067 131.719 14.7333 132.333 14.76C132.946 14.7867 133.546 14.8 134.133 14.8C134.799 14.8 135.453 14.7867 136.093 14.76C136.733 14.7333 137.306 14.7067 137.813 14.68L154.173 31.96V22.52C154.173 20.7333 154.093 19.3733 153.933 18.44C153.799 17.48 153.453 16.7867 152.893 16.36C152.333 15.9333 151.413 15.64 150.133 15.48V14.68C150.666 14.7067 151.359 14.7333 152.213 14.76C153.066 14.7867 153.866 14.8 154.613 14.8C155.226 14.8 155.826 14.7867 156.413 14.76C157.026 14.7333 157.533 14.7067 157.933 14.68ZM188.949 14.68C194.549 14.68 198.696 15.88 201.389 18.28C204.109 20.6533 205.469 24.0667 205.469 28.52C205.469 31.4267 204.803 33.9733 203.469 36.16C202.136 38.32 200.203 40 197.669 41.2C195.163 42.4 192.136 43 188.589 43C188.163 43 187.589 42.9867 186.869 42.96C186.176 42.9333 185.443 42.92 184.669 42.92C183.896 42.8933 183.203 42.88 182.589 42.88C181.256 42.88 179.949 42.8933 178.669 42.92C177.416 42.92 176.403 42.9467 175.629 43V42.2C176.456 42.1467 177.069 42.04 177.469 41.88C177.869 41.72 178.136 41.4 178.269 40.92C178.403 40.44 178.469 39.72 178.469 38.76V18.92C178.469 17.9333 178.403 17.2133 178.269 16.76C178.136 16.28 177.856 15.96 177.429 15.8C177.029 15.6133 176.429 15.5067 175.629 15.48V14.68C176.403 14.7067 177.416 14.7467 178.669 14.8C179.949 14.8267 181.229 14.8267 182.509 14.8C183.496 14.7733 184.603 14.7467 185.829 14.72C187.083 14.6933 188.123 14.68 188.949 14.68ZM189.549 15.4C188.323 15.4 187.523 15.6267 187.149 16.08C186.776 16.5333 186.589 17.4533 186.589 18.84V38.84C186.589 40.2267 186.776 41.1467 187.149 41.6C187.549 42.0533 188.363 42.28 189.589 42.28C191.403 42.28 192.856 41.76 193.949 40.72C195.043 39.6533 195.829 38.1067 196.309 36.08C196.816 34.0533 197.069 31.5867 197.069 28.68C197.069 25.6933 196.803 23.2267 196.269 21.28C195.763 19.3067 194.949 17.84 193.829 16.88C192.736 15.8933 191.309 15.4 189.549 15.4Z\" fill=\"black\"/>\n<path d=\"M89.6 77H91.06L85.9 62.94H84.42L79.26 77H80.72L82.32 72.52H87.98L89.6 77ZM85.18 64.4C85.18 64.4 85.48 65.56 85.72 66.22L87.56 71.32H82.72L84.6 66.22C84.84 65.56 85.14 64.4 85.14 64.4H85.18ZM99.3642 77H100.744V71.48H104.224C106.744 71.48 108.564 69.8 108.564 67.18C108.564 64.58 106.744 62.94 104.224 62.94H99.3642V77ZM100.744 70.24V64.18H104.064C105.924 64.18 107.144 65.28 107.144 67.18C107.144 69.1 105.924 70.24 104.044 70.24H100.744ZM117.317 77H118.697V71.48H122.177C124.697 71.48 126.517 69.8 126.517 67.18C126.517 64.58 124.697 62.94 122.177 62.94H117.317V77ZM118.697 70.24V64.18H122.017C123.877 64.18 125.097 65.28 125.097 67.18C125.097 69.1 123.877 70.24 121.997 70.24H118.697Z\" fill=\"black\"/>\n</svg>\n\n    </div>\n\n    <!-- Search bar -->\n    <b-container>\n      <b-form @submit.prevent=\"fetchData()\">\n        <b-form-input\n          id=\"inputSearchBar\"\n          class=\"mx-auto mt-5 w-50 px-4 my-4\"\n          type=\"search\"\n          placeholder=\"Research an article\"\n          v-model=\"search\"\n        />\n      </b-form>\n      <br />\n    </b-container>\n\n    <!-- Filters -->\n\n    <b-container>\n      <ul class=\"nav justify-content-center\">\n        <li class=\"nav-item\">\n          <button class=\"nav-link\" \n          aria-current=\"page\" \n          @click=\"selectData(business)\">Business</button>\n        </li>\n        <li class=\"nav-item\">\n          <button \n          class=\"nav-link\" \n          @click=\"selectData(technology)\"> Technology \n          </button>\n        </li>\n        <li class=\"nav-item\">\n          <button class=\"nav-link\" @click=\"selectData(entertainment)\">Entertainment</button>\n        </li>\n        <li class=\"nav-item\">\n          <button class=\"nav-link\"\n          @click=\"selectData(general)\">General</button>\n        </li>\n        <li class=\"nav-item\">\n          <button class=\"nav-link\" @click=\"selectData(health)\">Health</button>\n        </li>\n\n         <li class=\"nav-item\">\n          <button class=\"nav-link\" @click=\"selectData(science)\">Science</button>\n        </li>\n        \n       \n        \n      </ul>\n    </b-container>\n\n    <!-- Articles -->\n    <br />\n    <b-container>\n      <b-row>\n        <b-col\n          cols=\"4\"\n          class=\"d-flex align-items-stretch\"\n          v-for=\"article in articles\"\n          :key=\"article.id\"\n          @click=\"openLink(article.url)\"\n        >\n          <b-card\n            :title=\"article.title\"\n            :img-src=\"article.urlToImage\"\n            class=\"mb-5 px-0 shadow-none border-0\"\n          >\n            <b-card-text>{{ article.description }}</b-card-text>\n            <b-card-text class=\"text-muted\">{{ article.author }}</b-card-text>\n            <b-card-text class=\"text-muted bottom\">{{\n              article.publishedAt | formatDate\n            }}</b-card-text>\n          </b-card>\n        </b-col>\n      </b-row>\n      <b-pagination\n        pills\n        align=\"center\"\n        v-model=\"currentPage\"\n        :total-rows=\"totalResults\"\n        :per-page=\"newsPerPage\"\n        class=\"mt-5 mb-5\"\n        @input=\"updatePage(currentPage)\"\n      />\n    </b-container>\n  </div>\n</template>\n\n<script>\n  import moment from 'moment'\n\n  export default {\n    name: 'News',\n    props: ['apiKey'],\n    data: () => {\n      return {\n        url: '',\n        currentPage: 1,\n        totalResults: 0,\n        newsPerPage: 10,\n        articles: [],\n        search: '',\n       \n      }\n    },\n    filters: {\n      formatDate: function (value) {\n        if (value) {\n          return moment(String(value)).format('MM/DD/YYYY hh:mm')\n        }\n      },\n    },\n    methods: {\n      fetchData() {\n        if (this.search !== '') {\n          this.url =\n            'https://newsapi.org/v2/everything?q=' +\n            this.search +\n            '&pageSize=' +\n            this.newsPerPage +\n            '&apiKey=' +\n            this.apiKey\n        } else {\n          this.url =\n            'https://newsapi.org/v2/top-headlines?country=gb&pageSize=' +\n            this.newsPerPage +\n            '&apiKey=' +\n            this.apiKey\n\n          this.search = ''\n        }\n\n        this.articles = []\n\n        let request = new Request(this.url + '&page=' + this.currentPage)\n        fetch(request)\n          .then((response) => response.json())\n          .then((data) => {\n            this.totalResults = data.totalResults\n            data.articles.forEach((element) => {\n              this.articles.push(element)\n            })\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      },\n\n      selectData(category) {\n         \n         this.url =\n            'https://newsapi.org/v2/top-headlines?category=' +\n            category +\n            '&apiKey=' +\n            this.apiKey\n\n      \n\n        this.articles = []\n\n        let request = new Request(this.url + '&page=' + this.currentPage)\n        fetch(request)\n          .then((response) => response.json())\n          .then((data) => {\n            this.totalResults = data.totalResults\n            data.articles.forEach((element) => {\n              this.articles.push(element)\n            })\n          })\n          .catch((error) => {\n            console.log(error)\n          })\n      },\n\n      updateNewsPerPage(value) {\n        this.newsPerPage = value\n        this.currentPage = 1\n        this.fetchData()\n      },\n\n      updatePage(page) {\n        this.currentPage = page\n        this.fetchData()\n      },\n\n      openLink(url) {\n        window.open(url)\n      },\n    },\n    created() {\n      this.fetchData()\n    },\n\n    selectCategorie () {\n      this.categorie = 'https://newsapi.org/v2/top-headlines/sources?category=businessapiKey=API_KEY';\n      this.fetchData()\n    },\n  }\n</script>\n\n<style scoped>\n\n  .nav-item, .nav-link {\n    background-color:transparent;\n\t  cursor:pointer;\n\t  color:#000;\n\t  font-family: Montserrat;\n\t  font-size:16px;\n\t  padding:16px 31px;\n\t  text-decoration:none;\n    border: none;\n  }\n  img {\n    height: 250px;\n    width: 100%;\n    object-fit: cover;\n  }\n  .form-control{\n  color: black;\n  border: 1px solid black;\n  background-color: transparent;\n  }\n  .bottom {\n    position: absolute;\n    right: 10px;\n    bottom: 10px;\n  }\n  .card {\n    border-radius: 4px;\n    background: #fff;\n    box-shadow: 0 6px 10px rgba(0, 0, 0, 0.08), 0 0 6px rgba(0, 0, 0, 0.05);\n    transition: 0.3s transform cubic-bezier(0.155, 1.105, 0.295, 1.12),\n      0.3s box-shadow,\n      0.3s -webkit-transform cubic-bezier(0.155, 1.105, 0.295, 1.12);\n    cursor: pointer;\n  }\n\n  .card:hover {\n    transform: scale(1.05);\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.12), 0 4px 8px rgba(0, 0, 0, 0.06);\n  }\n</style>\n"]},"metadata":{},"sourceType":"module"}